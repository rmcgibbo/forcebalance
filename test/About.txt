This folder contains testing routines for ForceBalance

=====================
=   Basic usage     =
=====================
To run through all tests and print results to standard out, run
python test
from a shell at the root 'forcebalance' directly

To see options for more advanced usage, run
python test -h

=====================
=   Headless Config =
=====================
In headless mode, tests results are not printed to the screen. Tests will be run in this
mode when a headless config file is provided as a command line argument:
python test --headless-config=config_file.conf

the config file is a line separated list of options in the form
option=value
which determine where test results are sent

Available options are:
log_location (string)       : path to put test log. If not specified, log is not saved
enable_smtp (string)        : valid values are
                              'true'- send test results via email after every test
                              'error'- only send if any tests fail or have errors
smtp_server (string)        : the url of the smtp server used for sending log information
smtp_port (integer)         : the port number to use when connecting to the smtp server
smtp_user (string)          : the user to use when connecting to the smtp server
smtp_password (string)      : the password to use when connecting to the smtp server
smtp_tls (boolean)          : whether the smtp server requires TLS when authenticating
smtp_destination (string)   : the destination address where the error log will be sent
smtp_source (string)        : specifies the "from:" header in the outgoing email
smtp_subject (string)       : specifies the subject of the outgoing email

=====================
=   Contents        =
=====================
Contents of this directory are as follows:

    files/      : This directory holds files used to provide sample input for various test cases

    test_*.py   : Test modules named after the corresponding files in ../src/ being tested

    __init__.py : Classes that modify the python unittest framework and provide general unit testing functionality

    __main__.py : Functions providing an interface from which tests can be run from the command line

    __test__.py : some basic test cases that test result presentation
                  This is also a good template to use when creating a new test module file